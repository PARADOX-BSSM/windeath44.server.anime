spring:
  application:
    name: anime
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${JDBC_DRIVER_SOURCE}
    url: ${DB_URL}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
  data:
    elasticsearch:
      repositories:
        enabled: true

  elasticsearch:
    uris: ${ELASTICSEARCH_URI:http://localhost:9200}
server:
  port:
    ${SERVER_PORT}

logging:
  level:
    com.example.anime : trace
grpc:
  server:
    address: ${GRPC_SERVER_ADDRESS}
    port: ${GRPC_SERVER_PORT}

storage:
  access-key: ${STORAGE_ACCESS_KEY}
  secret-key: ${STORAGE_SECRET_KEY}
  bucket-name: ${STORAGE_BUCKET_NAME}
  region: ap-northeast-2

kafka:
  bootstrap-servers: ${KAFKA_SERVER}
  schema-registry-url: http://localhost:8081
  consumer:
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    specific-avro-reader: true
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
